{"ast":null,"code":"import _asyncToGenerator from \"/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\"; // eslint-disable-next-line\n\nimport { extend, ValidationProvider, localize } from \"vee-validate\";\nimport { max } from \"vee-validate/dist/rules\";\nimport ja from \"vee-validate/dist/locale/ja\"; // eslint-disable-next-line\n\nlocalize(\"ja\", ja);\nextend(\"max\", max);\nexport default {\n  components: {\n    ValidationProvider: ValidationProvider\n  },\n  data: function data() {\n    return {\n      selected: [2],\n      items: [// {\n        //   id: 1,\n        //   task: \"Vuetifyを勉強する\",\n        //   done: true,\n        // },\n        // {\n        //   id: 2,\n        //   task: \"JSを勉強する\",\n        //   done: false,\n        // },\n      ],\n      todo: \"\",\n      valid: false\n    };\n  },\n  created: function created() {\n    this.getTasks();\n  },\n  methods: {\n    done: function done(id) {\n      this.items[id - 1].done = !this.items[id - 1].done;\n      console.log(this.items[id - 1].done);\n    },\n    deleteTask: function deleteTask(id) {\n      this.items = this.items.filter(function (item) {\n        return item.id !== id;\n      });\n    },\n    addTask: function addTask(todo) {\n      var id = this.items.length + 1;\n      this.items.push({\n        id: id,\n        task: todo,\n        done: false\n      });\n    },\n    getTasks: function getTasks() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost:3030/api/v1/tasks\");\n\n              case 2:\n                response = _context.sent;\n                _this.items = response.data.tasks.map(function (task) {\n                  return {\n                    id: task.id,\n                    task: task.task,\n                    done: task.done\n                  };\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA,0B,CACA;;AACA;AACA;AACA,6C,CAEA;;AACAA;AAEAC;AAEA;AACAC;AACAC;AADA,GADA;AAIAC;AAAA;AACAC,mBADA;AAEAC,cACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA,OAFA;AAcAC,cAdA;AAeAC;AAfA;AAAA,GAJA;AAqBAC,SArBA,qBAqBA;AACA;AACA,GAvBA;AAwBAC;AACAC,QADA,gBACAC,EADA,EACA;AACA;AACAC;AACA,KAJA;AAKAC,cALA,sBAKAF,EALA,EAKA;AACA;AAAA;AAAA;AACA,KAPA;AAQAG,WARA,mBAQAR,IARA,EAQA;AACA;AACA;AAAAK;AAAAI;AAAAL;AAAA;AACA,KAXA;AAYAM,YAZA,sBAYA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACAC,+CADA;;AAAA;AACAC,wBADA;AAEA;AACA;AAAAP;AAAAI;AAAAL;AAAA;AACA,iBAFA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAjBA;AAxBA","names":["localize","extend","components","ValidationProvider","data","selected","items","todo","valid","created","methods","done","id","console","deleteTask","addTask","task","getTasks","axios","response"],"sourceRoot":"src/components","sources":["TodoList.vue"],"sourcesContent":["<template>\n  <v-card class=\"mx-auto\" max-width=\"500\">\n    <v-toolbar color=\"pink\" dark>\n      <v-app-bar-nav-icon></v-app-bar-nav-icon>\n\n      <v-toolbar-title>TodoList</v-toolbar-title>\n\n      <v-spacer></v-spacer>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-checkbox-marked-circle</v-icon>\n      </v-btn>\n    </v-toolbar>\n    <v-list v-for=\"item in items\" :key=\"item.id\" cols=\"12\">\n      <v-list-item-group>\n        <v-list-item>\n          <v-list-item-action>\n            <v-checkbox\n              :input-value=\"item.done\"\n              @click=\"done(item.id)\"\n            ></v-checkbox>\n          </v-list-item-action>\n          <v-list-item-content>\n            <v-list-item-title>{{ item.id }}</v-list-item-title>\n          </v-list-item-content>\n          <v-list-item-content>\n            <v-list-item-title>{{ item.task }}</v-list-item-title>\n          </v-list-item-content>\n          <v-list-item-action>\n            <v-btn @click=\"deleteTask(item.id)\" icon>\n              <v-icon>\n                mdi-backspace\n              </v-icon></v-btn\n            >\n          </v-list-item-action>\n        </v-list-item>\n      </v-list-item-group>\n    </v-list>\n    <v-col cols=\"12\" class=\"d-flex\">\n      <v-form v-model=\"valid\">\n      <v-list-item-content>\n        <ValidationProvider v-slot=\"{ errors }\" rules=\"max:3\">\n          <v-text-field\n            v-model=\"todo\"\n            label=\"AddTodo\"\n            required\n            :error-messages=\"errors\"\n          ></v-text-field>\n        </ValidationProvider>\n      </v-list-item-content>\n\n      <v-list-item-action>\n        <v-btn @click.stop=\"addTask(todo)\" icon>\n          <v-icon>\n            mdi-plus-circle\n          </v-icon>\n        </v-btn>\n      </v-list-item-action>\n      </v-form>\n    </v-col>\n  </v-card>\n</template>\n\n<script>\n  import axios from \"axios\";\n  // eslint-disable-next-line\n  import { extend, ValidationProvider, localize } from \"vee-validate\";\n  import { max } from \"vee-validate/dist/rules\";\n  import ja from \"vee-validate/dist/locale/ja\";\n\n  // eslint-disable-next-line\n  localize(\"ja\", ja);\n\n  extend(\"max\", max);\n\n  export default {\n    components: {\n      ValidationProvider,\n    },\n    data: () => ({\n      selected: [2],\n      items: [\n        // {\n        //   id: 1,\n        //   task: \"Vuetifyを勉強する\",\n        //   done: true,\n        // },\n        // {\n        //   id: 2,\n        //   task: \"JSを勉強する\",\n        //   done: false,\n        // },\n      ],\n      todo: \"\",\n      valid: false,\n    }),\n    created() {\n      this.getTasks();\n    },\n    methods: {\n      done(id) {\n        this.items[id - 1].done = !this.items[id - 1].done;\n        console.log(this.items[id - 1].done);\n      },\n      deleteTask(id) {\n        this.items = this.items.filter((item) => item.id !== id);\n      },\n      addTask(todo) {\n        let id = this.items.length + 1;\n        this.items.push({ id: id, task: todo, done: false });\n      },\n      async getTasks() {\n        const response = await axios.get(\"http://localhost:3030/api/v1/tasks\");\n        this.items = response.data.tasks.map((task) => {\n          return { id: task.id, task: task.task, done: task.done };\n        });\n      },\n    },\n  };\n</script>\n"]},"metadata":{},"sourceType":"module"}