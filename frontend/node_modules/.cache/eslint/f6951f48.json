[{"/app/src/main.js":"1","/app/src/plugins/vuetify.js":"2","/app/src/store/store.js":"3","/app/src/App.vue":"4","/app/src/components/HelpPage.vue":"5","/app/src/components/LogoutPage.vue":"6","/app/src/components/ClassChangePage.vue":"7","/app/src/components/SignUpPage.vue":"8","/app/src/components/HomePage.vue":"9","/app/src/components/LoginPage.vue":"10","/app/src/components/ShowRecordPage.vue":"11","/app/src/components/RecordPage.vue":"12","/app/src/components/AccountPage.vue":"13","/app/src/components/AppHeader.vue":"14","/app/src/components/AppFooter.vue":"15","/app/src/common/constants.js":"16","/app/src/components/Task/TaskEditPage.vue":"17","/app/src/components/Task/TaskListPage.vue":"18","/app/src/components/Task/TaskCreatePage.vue":"19","/app/src/components/Task/TaskPage.vue":"20","/app/src/router/router.js":"21"},{"size":1617,"mtime":1651888359963,"results":"22","hashOfConfig":"23"},{"size":121,"mtime":1649487499161,"results":"24","hashOfConfig":"23"},{"size":2011,"mtime":1651886163117,"results":"25","hashOfConfig":"23"},{"size":530,"mtime":1651888250650,"results":"26","hashOfConfig":"23"},{"size":65,"mtime":1649980518802,"results":"27","hashOfConfig":"23"},{"size":226,"mtime":1651497084222,"results":"28","hashOfConfig":"23"},{"size":72,"mtime":1649981046268,"results":"29","hashOfConfig":"23"},{"size":4234,"mtime":1651886163115,"results":"30","hashOfConfig":"23"},{"size":72,"mtime":1651562653408,"results":"31","hashOfConfig":"23"},{"size":4161,"mtime":1651886163115,"results":"32","hashOfConfig":"23"},{"size":71,"mtime":1649980518804,"results":"33","hashOfConfig":"23"},{"size":71,"mtime":1649980518803,"results":"34","hashOfConfig":"23"},{"size":68,"mtime":1649980518801,"results":"35","hashOfConfig":"23"},{"size":6284,"mtime":1651886163115,"results":"36","hashOfConfig":"23"},{"size":201,"mtime":1649980518801,"results":"37","hashOfConfig":"23"},{"size":683,"mtime":1651886163114,"results":"38","hashOfConfig":"23"},{"size":4993,"mtime":1651886163116,"results":"39","hashOfConfig":"23"},{"size":3093,"mtime":1651886163116,"results":"40","hashOfConfig":"23"},{"size":2585,"mtime":1651886163116,"results":"41","hashOfConfig":"23"},{"size":3073,"mtime":1651886163117,"results":"42","hashOfConfig":"23"},{"size":1644,"mtime":1651888146144,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13lbi3y",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/main.js",[],"/app/src/plugins/vuetify.js",[],[],"/app/src/store/store.js",[],"/app/src/App.vue",[],"/app/src/components/HelpPage.vue",[],[],"/app/src/components/LogoutPage.vue",[],"/app/src/components/ClassChangePage.vue",[],"/app/src/components/SignUpPage.vue",[],"/app/src/components/HomePage.vue",[],"/app/src/components/LoginPage.vue",[],"/app/src/components/ShowRecordPage.vue",[],"/app/src/components/RecordPage.vue",[],"/app/src/components/AccountPage.vue",[],"/app/src/components/AppHeader.vue",["92"],"<template>\n  <div>\n    <header>\n      <v-app-bar app dark>\n        <v-app-bar-nav-icon @click=\"drawer = true\"></v-app-bar-nav-icon>\n        <v-toolbar-title>HabituationQuest</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-tabs right>\n          <v-tab link to=\"/record\">\n            <v-btn icon class=\"right\">\n              <v-icon>mdi-lead-pencil</v-icon>\n            </v-btn>\n          </v-tab>\n          <v-tab link to=\"/show_record\">\n            <v-btn icon class=\"right\">\n              <v-icon>mdi-book-open-page-variant-outline</v-icon>\n            </v-btn>\n          </v-tab>\n          <v-tab link to=\"/show_record\">\n            <div class=\"text-center\">\n              <v-menu offset-y>\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn icon class=\"right\" dark v-bind=\"attrs\" v-on=\"on\">\n                    <v-icon>mdi-information</v-icon>\n                  </v-btn>\n                </template>\n                <v-list>\n                  <v-list-item link v-for=\"(item, index) in items\" :key=\"index\">\n                    <v-list-item-title>{{ item.title }}</v-list-item-title>\n                  </v-list-item>\n                </v-list>\n              </v-menu>\n            </div>\n          </v-tab>\n          <v-tab link to=\"/help\">\n            <v-btn icon class=\"right\">\n              <v-icon>mdi-help</v-icon>\n            </v-btn>\n          </v-tab>\n          <v-tab link to=\"/class_change\">\n            <v-btn icon class=\"right\">\n              <v-icon>mdi-account-switch</v-icon>\n            </v-btn>\n          </v-tab>\n          <v-tab link to=\"/account\">\n            <v-btn icon class=\"right\">\n              <v-icon>mdi-account</v-icon>\n            </v-btn></v-tab\n          >\n        </v-tabs>\n      </v-app-bar>\n      <v-navigation-drawer v-model=\"drawer\" fixed temporary>\n        <v-list nav dense>\n          <v-list-item-group v-if=\"loggedIn\">\n            <v-list-item\n              link\n              :to=\"menuItem.url\"\n              v-for=\"(menuItem, index) in menuItems\"\n              :key=\"index\"\n            >\n              <v-list-item-icon>\n                <v-icon>{{ menuItem.icon }}</v-icon>\n              </v-list-item-icon>\n              <v-list-item-content>\n                <v-list-item-title>{{ menuItem.name }}</v-list-item-title>\n              </v-list-item-content>\n            </v-list-item>\n          </v-list-item-group>\n          <v-list-item-group>\n            <v-list-item v-if=\"!loggedIn\" link to=\"signup\">\n              <v-list-item-icon>\n                <v-icon>mdi-signup</v-icon>\n              </v-list-item-icon>\n              <v-list-item-content>\n                <v-list-item-title>SignUp</v-list-item-title>\n              </v-list-item-content>\n            </v-list-item>\n            <v-list-item v-if=\"!loggedIn\" link to=\"/login\">\n              <v-list-item-icon>\n                <v-icon>mdi-login</v-icon>\n              </v-list-item-icon>\n              <v-list-item-content>\n                <v-list-item-title>Login</v-list-item-title>\n              </v-list-item-content>\n            </v-list-item>\n            <v-list-item v-if=\"loggedIn\" @click=\"logout_dialog = true\">\n              <v-list-item-icon>\n                <v-icon>mdi-logout</v-icon>\n              </v-list-item-icon>\n              <v-list-item-content>\n                <v-list-item-title>Logout</v-list-item-title>\n              </v-list-item-content>\n            </v-list-item>\n          </v-list-item-group>\n        </v-list>\n      </v-navigation-drawer>\n    </header>\n    <v-dialog v-model=\"logout_dialog\" max-width=\"400\">\n      <v-card>\n        <v-card-title>\n          <div>ログアウト</div>\n        </v-card-title>\n        <v-card-text>\n          <p>ログアウトしますか？</p>\n        </v-card-text>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn @click=\"logout_dialog = false\">閉じる</v-btn>\n          <v-btn color=\"primary\" @click=\"logout()\">OK</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\n  import constants from \"@/common/constants\";\n  import axios from \"axios\";\n\n  export default {\n    data() {\n      return {\n        drawer: false,\n        settings: false,\n        menuItems: constants.menuItems,\n        items: [\n          { title: \"Click Me\" },\n          { title: \"Click Me\" },\n          { title: \"Click Me\" },\n          { title: \"Click Me 2\" },\n        ],\n        logout_dialog: false,\n      };\n    },\n    computed: {\n      loggedIn() {\n        return this.$store.getters.getLoggedIn;\n      },\n    },\n    methods: {\n      async logout() {\n        // console.log({\n        //   uid: decodeURIComponent(this.$cookies.get(\"uid\")),\n        //   \"access-token\": this.$cookies.get(\"access-token\"),\n        //   client: this.$cookies.get(\"client\"),\n        // });\n        await axios\n          .delete(\"/api/v1/auth/sign_out\", {\n            data: {\n              uid: decodeURIComponent(this.$cookies.get(\"uid\")),\n              \"access-token\": this.$cookies.get(\"access-token\"),\n              client: this.$cookies.get(\"client\"),\n            },\n          })\n          .then((response) => {\n            // console.log(response);\n            this.logout_dialog = false;\n            this.$store.commit(\"setLoggedIn\", false);\n            this.$cookies.remove(\"uid\");\n            this.$cookies.remove(\"access-token\");\n            this.$cookies.remove(\"client\");\n            if (this.$router.path !== \"/\") {\n              this.$router.push(\"/\");\n            }\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      },\n    },\n  };\n</script>\n<style lang=\"scss\" scoped>\n  /* scoped属性をつけることで、styleをそのコンポーネント内のみ適用 */\n  .v-toolbar__title {\n    overflow: visible !important;\n    margin-right: 50px !important;\n  }\n  // .v-app-bar__nav-icon {\n  //   @include display_pc {\n  //     display: none !important;\n  //   }\n  // }\n  // .v-toolbar {\n  //   .v-btn.right {\n  //     display: none;\n\n  //     @include display_pc {\n  //       display: block !important;\n  //     }\n  //   }\n  // }\n  .v-tab {\n    display: none;\n\n    @include display_pc {\n      display: block !important;\n    }\n  }\n  .bar-icon {\n    margin-right: 10px !important;\n  }\n</style>\n","/app/src/components/AppFooter.vue",[],"/app/src/common/constants.js",[],"/app/src/components/Task/TaskEditPage.vue",["93","94"],"<template>\n  <div>\n    <h1 class=\"text-center mt-5 mb-5\">タスク編集</h1>\n    <v-card class=\"mx-auto px-5 py-5\" max-width=\"500\">\n      <v-alert id=\"error-message\" v-if=\"errorMessage\" type=\"error\">{{\n        errorMessage\n      }}</v-alert>\n      <validation-observer ref=\"observer\" v-slot=\"{ invalid }\">\n        <v-form ref=\"form\" width=\"400\">\n          <validation-provider\n            v-slot=\"{ errors }\"\n            name=\"タスク名\"\n            rules=\"required|max:30\"\n          >\n            <v-text-field\n              id=\"taskName\"\n              v-model=\"taskName\"\n              label=\"タスク名\"\n              required\n              :error-messages=\"errors\"\n            ></v-text-field>\n          </validation-provider>\n\n          <v-btn\n            id=\"updateTask\"\n            color=\"primary\"\n            class=\"mr-4\"\n            @click=\"updateTask\"\n            :disabled=\"(isSameTaskName || invalid)\"\n          >\n            <v-icon>mdi-cached</v-icon>更新\n          </v-btn>\n          <v-btn id=\"deleteTask\" color=\"error\" @click=\"deleteDialog = true\"\n            ><v-icon>mdi-delete</v-icon>削除</v-btn\n          >\n          <br />\n          <v-btn\n            id=\"back\"\n            link\n            class=\"mt-5 mr-4\"\n            color=\"info\"\n            :to=\"'/task/' + taskId\"\n            >戻る</v-btn\n          >\n          <v-btn id=\"backToList\" link class=\"mt-5\" color=\"info\" to=\"/task_list\"\n            >リストに戻る</v-btn\n          >\n        </v-form>\n      </validation-observer>\n    </v-card>\n\n    <v-dialog v-model=\"deleteDialog\" max-width=\"400\">\n      <v-card>\n        <v-card-title>\n          <div>タスク削除</div>\n        </v-card-title>\n        <v-card-text>\n          <p>タスク名: {{ task.name }} を削除しますか？</p>\n        </v-card-text>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn id=\"cancel\" color=\"primary\" @click=\"deleteDialog = false\"\n            >Cancel</v-btn\n          >\n          <v-btn id=\"ok\" color=\"error\" @click=\"deleteTask()\">OK</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\n  import axios from \"axios\";\n  import {\n    extend,\n    ValidationObserver,\n    ValidationProvider,\n    localize,\n  } from \"vee-validate\";\n  import { max } from \"vee-validate/dist/rules\";\n  import ja from \"vee-validate/dist/locale/ja\";\n\n  localize(\"ja\", ja);\n  extend(\"max\", max);\n\n  export default {\n    components: {\n      ValidationProvider,\n      ValidationObserver,\n    },\n    data: () => ({\n      taskId: 0,\n      task: {},\n      taskName: \"\",\n      errorMessage: \"\",\n      deleteDialog: false,\n    }),\n    mounted() {\n      if (\n        this.$store.getters.getTasks.length == 0 ||\n        !this.$route.params[\"id\"]\n      ) {\n        this.$router.push(\"/task_list\");\n      } else {\n        // paramからタスクのIDを取得(文字列であることに注意)\n        this.taskId = Number(this.$route.params[\"id\"]);\n        // vuexのストアからタスクIDでタスクを取得する\n        this.task = this.$store.getters.getTaskFromId(this.taskId);\n        // console.log(this.task);\n        this.taskName = this.task.name;\n      }\n    },\n    computed: {\n      isSameTaskName() {\n        return this.task.name === this.taskName;\n      },\n    },\n    methods: {\n      /**\n       * タスクを編集するための関数です\n       */\n      async updateTask() {\n        await axios\n          .put(\n            `/api/v1/tasks/${this.task.id}`,\n            {\n              task: {\n                name: this.taskName,\n              },\n            },\n            {\n              headers: {\n                \"access-token\": this.$cookies.get(\"access-token\"),\n                client: this.$cookies.get(\"client\"),\n                uid: this.$cookies.get(\"uid\"),\n              },\n            }\n          )\n          .then((response) => {\n            // console.log(response);\n            this.$router.push(\"/task_list\");\n          })\n          .catch((error) => {\n            console.error(error);\n            console.error(error.response);\n            this.errorMessage = error.response.data.errors[0];\n            console.error(this.errorMessage);\n          });\n      },\n      /**\n       * タスクを削除するための関数です\n       */\n      async deleteTask() {\n        await axios\n          .delete(`/api/v1/tasks/${this.task.id}`, {\n            headers: {\n              \"access-token\": this.$cookies.get(\"access-token\"),\n              client: this.$cookies.get(\"client\"),\n              uid: this.$cookies.get(\"uid\"),\n            },\n          })\n          .then((response) => {\n            // console.log(response);\n            this.$router.push(\"/task_list\");\n          })\n          .catch((error) => {\n            console.error(error);\n            console.error(error.response);\n            this.errorMessage = error.response.data.errors[0];\n            console.error(this.errorMessage);\n          });\n      },\n    },\n  };\n</script>\n","/app/src/components/Task/TaskListPage.vue",[],"/app/src/components/Task/TaskCreatePage.vue",["95"],"<template>\n  <div>\n    <h1 class=\"text-center mt-5 mb-5\">タスク作成</h1>\n    <v-card class=\"mx-auto px-5 py-5\" max-width=\"500\">\n      <v-alert id=\"error-message\" v-if=\"errorMessage\" type=\"error\">{{\n        errorMessage\n      }}</v-alert>\n      <validation-observer ref=\"observer\" v-slot=\"{ invalid }\">\n        <v-form ref=\"form\" width=\"400\">\n          <validation-provider\n            v-slot=\"{ errors }\"\n            name=\"タスク名\"\n            rules=\"required|max:30\"\n          >\n            <v-text-field\n              id=\"taskName\"\n              v-model=\"taskName\"\n              label=\"タスク名\"\n              required\n              :error-messages=\"errors\"\n            ></v-text-field>\n          </validation-provider>\n\n          <v-btn\n            id=\"submit\"\n            color=\"primary\"\n            class=\"mr-4\"\n            @click=\"createTask\"\n            :disabled=\"invalid\"\n          >\n            <v-icon>mdi-plus</v-icon>作成\n          </v-btn>\n          <br />\n          <v-btn id=\"backToList\" link class=\"mt-5\" color=\"info\" to=\"/task_list\"\n            >リストに戻る</v-btn\n          >\n        </v-form>\n      </validation-observer>\n    </v-card>\n  </div>\n</template>\n\n<script>\n  import axios from \"axios\";\n  import {\n    extend,\n    ValidationObserver,\n    ValidationProvider,\n    localize,\n  } from \"vee-validate\";\n  import { max } from \"vee-validate/dist/rules\";\n  import ja from \"vee-validate/dist/locale/ja\";\n\n  localize(\"ja\", ja);\n  extend(\"max\", max);\n\n  export default {\n    components: {\n      ValidationProvider,\n      ValidationObserver,\n    },\n    data: () => ({\n      taskName: \"\",\n      errorMessage: \"\",\n    }),\n    methods: {\n      /**\n       * タスクを作成するための関数です\n       */\n      async createTask() {\n        await axios\n          .post(\n            \"/api/v1/tasks\",\n            {\n              task: {\n                name: this.taskName,\n              },\n            },\n            {\n              headers: {\n                \"access-token\": this.$cookies.get(\"access-token\"),\n                client: this.$cookies.get(\"client\"),\n                uid: this.$cookies.get(\"uid\"),\n              },\n            }\n          )\n          .then((response) => {\n            // console.log(response);\n            this.$router.push(\"/task_list\");\n          })\n          .catch((error) => {\n            console.error(error);\n            console.error(error.response);\n            this.errorMessage = error.response.data.errors[0];\n            console.error(this.errorMessage);\n          });\n      },\n    },\n  };\n</script>\n","/app/src/components/Task/TaskPage.vue",["96","97"],"<template>\n  <div>\n    <h1 class=\"text-center mt-5 mb-5\">タスク</h1>\n    <v-card class=\"mx-auto px-5 py-5\" max-width=\"500\">\n      <h2 id=\"taskName\">{{ task.name }}</h2>\n\n      <v-btn\n        id=\"updateOrDelete\"\n        class=\"mt-5 mr-4\"\n        color=\"primary\"\n        link\n        :to=\"'/task_edit/' + taskId\"\n      >\n        <v-icon>mdi-cached</v-icon>更新 or <v-icon>mdi-delete</v-icon>削除\n      </v-btn>\n      <v-btn id=\"backToList\" class=\"mt-5\" link color=\"info\" to=\"/task_list\"\n        >リストに戻る</v-btn\n      >\n    </v-card>\n  </div>\n</template>\n\n<script>\n  import axios from \"axios\";\n\n  // taskのパラメータを表示したりする\n  // 継続日数など\n\n  export default {\n    data: () => ({\n      task: {},\n      taskId: 0,\n    }),\n    mounted() {\n      if (\n        this.$store.getters.getTasks.length == 0 ||\n        !this.$route.params[\"id\"]\n      ) {\n        this.$router.push(\"/task_list\");\n      } else {\n        // paramからタスクのIDを取得(文字列であることに注意)\n        this.taskId = Number(this.$route.params[\"id\"]);\n        // vuexのストアからタスクIDでタスクを取得する\n        this.task = this.$store.getters.getTaskFromId(this.taskId);\n        // console.log(this.task);\n      }\n    },\n    computed: {\n      isSameTaskName() {\n        return this.task.name === this.taskName;\n      },\n    },\n    methods: {\n      /**\n       * タスクを編集するための関数です\n       */\n      async updateTask() {\n        await axios\n          .put(\n            `/api/v1/tasks/${this.task.id}`,\n            {\n              task: {\n                name: this.taskName,\n              },\n            },\n            {\n              headers: {\n                \"access-token\": this.$cookies.get(\"access-token\"),\n                client: this.$cookies.get(\"client\"),\n                uid: this.$cookies.get(\"uid\"),\n              },\n            }\n          )\n          .then((response) => {\n            // console.log(response);\n            this.$router.push(\"/task_list\");\n          })\n          .catch((error) => {\n            console.error(error);\n            console.error(error.response);\n            this.errorMessage = error.response.data.errors[0];\n            console.error(this.errorMessage);\n          });\n      },\n      /**\n       * タスクを削除するための関数です\n       */\n      async deleteTask() {\n        await axios\n          .delete(`/api/v1/tasks/${this.task.id}`, {\n            headers: {\n              \"access-token\": this.$cookies.get(\"access-token\"),\n              client: this.$cookies.get(\"client\"),\n              uid: this.$cookies.get(\"uid\"),\n            },\n          })\n          .then((response) => {\n            // console.log(response);\n            this.$router.push(\"/task_list\");\n          })\n          .catch((error) => {\n            console.error(error);\n            console.error(error.response);\n            this.errorMessage = error.response.data.errors[0];\n            console.error(this.errorMessage);\n          });\n      },\n    },\n  };\n</script>\n","/app/src/router/router.js",[],{"ruleId":"98","severity":2,"message":"99","line":156,"column":18,"nodeType":"100","messageId":"101","endLine":156,"endColumn":26},{"ruleId":"98","severity":2,"message":"99","line":140,"column":18,"nodeType":"100","messageId":"101","endLine":140,"endColumn":26},{"ruleId":"98","severity":2,"message":"99","line":163,"column":18,"nodeType":"100","messageId":"101","endLine":163,"endColumn":26},{"ruleId":"98","severity":2,"message":"99","line":87,"column":18,"nodeType":"100","messageId":"101","endLine":87,"endColumn":26},{"ruleId":"98","severity":2,"message":"99","line":74,"column":18,"nodeType":"100","messageId":"101","endLine":74,"endColumn":26},{"ruleId":"98","severity":2,"message":"99","line":97,"column":18,"nodeType":"100","messageId":"101","endLine":97,"endColumn":26},"no-unused-vars","'response' is defined but never used.","Identifier","unusedVar"]